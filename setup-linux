#!/usr/bin/env bash

set -o pipefail -o errtrace -o errexit -o nounset
shopt -s inherit_errexit

[[ -n "${TRACE:-}" ]] && set -o xtrace

declare errmsg="ERROR (${0##*/})":
trap 'echo >&2 $errmsg trap on error \(rc=${PIPESTATUS[@]}\) near line $LINENO' ERR

echo "---- Linux ----"

cat >"${HOME}/.profile" <<EOL
[ -f ${HOME}/.bashrc ] && . ${HOME}/.bashrc
EOL

echo " ---> Updating and Upgrading packages..."

CLOUD_SDK_SOURCE="/etc/apt/sources.list.d/google-cloud-sdk.list"
if [[ ! -f "${CLOUD_SDK_SOURCE}" ]]; then
    echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a "${CLOUD_SDK_SOURCE}"
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -    
fi

sudo apt-get update
sudo apt-get upgrade -y

sudo apt-get install -y \
    apache2-utils \
    apt-transport-https \
    build-essential \
    ca-certificates \
    clang \
    cmake \
    curl \
    direnv \
    dnsutils \
    docker.io \
    gdb \
    git \
    git-crypt \
    gnupg \
    gnupg2 \
    google-cloud-sdk \
    google-cloud-sdk-app-engine-go \
    htop \
    jo \
    jq \
    less \
    lldb \
	m4 \
    man \
	maven \
	mkdocs \
    ncdu \
    netcat-openbsd \
    openssh-server \
	packer \
	parallel \
	pass \
    pkg-config \
    protobuf-compiler \
    pwgen \
    python \
    python-dev \
    python-pip \
    python3.7 \
    python3.7-dev \
    python3.7-venv \
    python3-flake8 \
    python3-pip \
    python3-setuptools \
    python3-wheel \
	openjdk-8-jdk \
    silversearcher-ag \
    software-properties-common \
    tmux \
    tree \
    unzip \
    wget \
    --no-install-recommends \

sudo rm -rf /var/lib/apt/lists/*

sudo pip3 install "awscli>=1.14.28,<2.0.0"
sudo pip3 install --upgrade yq

sudo snap install shellcheck || true
sudo snap install node --classic --channel=10 || true

curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
sudo apt-get install nodejs

if ! [[ -x "$(command -v go)" ]]; then
    echo " ---> Installing Go"
    export GO_VERSION="1.12.14"
    wget "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
    sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
    rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
fi
curl https://raw.githubusercontent.com/golang/dep/master/install.sh | INSTALL_DIRECTORY=/tmp sh && \
	sudo mv /tmp/dep /usr/local/bin

if ! [[ -x "$(command -v kubectl)" ]]; then
    echo " ---> Installing kubectl"
    sudo curl -L -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.12.8/bin/linux/amd64/kubectl
    sudo chmod 755 /usr/local/bin/kubectl
fi

if ! [[ -x "$(command -v minikube)" ]]; then
	curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
	chmod +x minikube
	sudo mv minikube /usr/local/bin/
fi

if ! [[ -x "$(command -v protoc)" ]]; then
    echo " ---> Installing protoc"
    export PROTOBUF_VERSION="3.8.0"
    mkdir -p protobuf_install
    pushd protobuf_install
    wget https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOBUF_VERSION}/protoc-${PROTOBUF_VERSION}-linux-x86_64.zip
    unzip protoc-${PROTOBUF_VERSION}-linux-x86_64.zip
    sudo mv bin/protoc /usr/local/bin
    sudo mv include/* /usr/local/include/
    popd
    rm -rf protobuf_install
fi

if ! [[ -x "$(command -v yq)" ]]; then
    echo " ---> Installing yq"
    sudo add-apt-repository ppa:rmescandon/yq
    sudo apt update
    sudo apt install yq -y
fi

echo " ---> Installing neovim"
sudo apt update -y
sudo apt install neovim -y

if ! [[ -x "$(command -v jump)" ]]; then
    echo " ---> Installing jump"
    export JUMP_VERSION="0.23.0"
    wget https://github.com/gsamokovarov/jump/releases/download/v${JUMP_VERSION}/jump_${JUMP_VERSION}_amd64.deb
    sudo dpkg -i jump_${JUMP_VERSION}_amd64.deb
    rm -f jump_${JUMP_VERSION}_amd64.deb
fi

if [[ ! -d "${HOME}/.fzf" ]]; then
    echo " ---> Installing fzf"
    git clone https://github.com/junegunn/fzf "${HOME}/.fzf"
    pushd "${HOME}/.fzf"
    git remote set-url origin git@github.com:junegunn/fzf.git
    ${HOME}/.fzf/install --bin --64 --no-zsh --no-fish
    popd
fi

if [[ ! -d "${HOME}/.tmux/plugins" ]]; then
    echo " ---> Installing tmux plugins"
    git clone https://github.com/tmux-plugins/tpm "${HOME}/.tmux/plugins/tpm"
    git clone https://github.com/tmux-plugins/tmux-open.git "${HOME}/.tmux/plugins/tmux-open"
    git clone https://github.com/tmux-plugins/tmux-yank.git "${HOME}/.tmux/plugins/tmux-yank"
    git clone https://github.com/tmux-plugins/tmux-prefix-highlight.git "${HOME}/.tmux/plugins/tmux-prefix-highlight"
fi

echo " ---> Adding user to docker group"
sudo gpasswd -a "${USER}" docker

echo ""
echo "---> Done!"
