#!/usr/bin/env bash

_escape() {
  echo -nE "${1//\\/\\\\}"
}

_mp_git_branch() {
  git rev-parse --is-inside-work-tree >/dev/null 2>&1 || return

  local branch
  if branch="$(\git symbolic-ref -q HEAD)"; then
    _escape "${branch#refs/heads/}"
  else
    \git rev-parse --short -q HEAD
  fi
}

_k8s_context() {
  local kubeconfig_context
  kubeconfig_context="$(kubectl config current-context | rev | cut -d '_' -f1 | rev | cut -d'/' -f2)"

  local ak_context
  ak_context="none"
  if [[ -n "${AK_URL}" ]]; then
    if [[ "${AK_URL}" == *"kind" ]]; then
      ak_context="$(cut -d'/' -f3 <<<"${AK_URL}")"
    elif [[ "${AK_URL}" == "file://"* ]]; then
      ak_context="$(akutil context current | cut -d'/' -f5)"
    else
      ak_context="$(echo "${AK_URL}" | cut -d'/' -f5 | cut -d'?' -f1)"
    fi
  fi

  echo "${kubeconfig_context}/${ak_context}"
}

_set_prompt() {
  local -i err=$?

  _blue_color="\[\e[34m\]"
  _dark_green_color="\[\e[92m\]"
  _green_color="\[\e[32m\]"
  _red_color="\[\e[91m\]"
  _magenta_color="\[\e[95m\]"
  _bold_text="\[\e[1m\]"
  _dim_text="\[\e[2m\]"
  _reset="\[\e[0m\]"

  if [[ "${err}" != "0" ]]; then
    MP_ERR=" ${_bold_text}${_red_color}${err}${_reset}"
  else
    MP_ERR=""
  fi

  mp_git="$(_mp_git_branch)"
  if [[ -n "${mp_git}" ]]; then
    MP_GIT=" ${_green_color}(${mp_git})${_reset}"
  else
    MP_GIT=""
  fi

  local k8s_context
  k8s_context="$(_k8s_context)"
  if [[ -n "${k8s_context}" ]]; then
    MP_K8S_CONTEXT=" ${_magenta_color}{${k8s_context}}${_reset}"
  else
    MP_K8S_CONTEXT=""
  fi

  MP_PREFIX="${_dark_green_color}âžœ${_reset}"
  MP_PWD=" ${_blue_color}[\W]${_reset}"

  local mp="${MP_PREFIX}${MP_ERR}${MP_K8S_CONTEXT}${MP_GIT}${MP_PWD} "
  if [[ "${MP_PS1:-}" != "${mp}" ]]; then
    MP_PS1="${mp}"
    shopt -u promptvars
    PS1="${MP_PS1}"
  fi
}

_main() {
  PROMPT_COMMAND=_set_prompt
}

_main
