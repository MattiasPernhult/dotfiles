#!/usr/bin/env bash

set -o pipefail -o errtrace -o errexit -o nounset

[[ -n "${TRACE:-}" ]] && set -o xtrace

declare errmsg="ERROR (${0##*/})":
trap 'echo >&2 $errmsg trap on error \(rc=${PIPESTATUS[@]}\) near line $LINENO' ERR

# ask for the administrator password upfront
sudo -v

readonly EKSCTL_VERSION="0.47.0"
readonly KUBECTL_VERSION="1.18.17"
readonly KIND_VERSION="0.7.0"
readonly KUSTOMIZE_VERSION="3.8.2"

mkdir -p ~/.config
mkdir -p ~/.config/nvim
mkdir -p ~/code/go
mkdir -p ~/code/python
mkdir -p ~/code/rust
mkdir -p ~/code/bin
mkdir -p ~/.logs

[ -f ~/.config/nvim/init.vim ] || ln -s "$(pwd)/nvim" ~/.config/nvim/init.vim
[ -f ~/.mpprompt ] || ln -s "$(pwd)/mpprompt" ~/.mpprompt
[ -f ~/.bashrc ] || ln -s "$(pwd)/bashrc" ~/.bashrc
[ -f ~/.tmux.conf ] || ln -s "$(pwd)/tmuxconf" ~/.tmux.conf
[ -f ~/.gitconfig ] || ln -s "$(pwd)/gitconfig" ~/.gitconfig
[ -f ~/.kubectl-aliases ] || ln -s "$(pwd)/kubectl-aliases" ~/.kubectl-aliases
[ -f ~/.macos ] || ln -s "$(pwd)/macos" ~/.macos

if ! which -s brew; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

cat <<EOF >"${HOME}/.bash_profile"
[ -f "${HOME}/.bashrc" ] && . "${HOME}/.bashrc"

# node@12
export PATH="/usr/local/opt/node@12/bin:\$PATH"
export LDFLAGS="-L/usr/local/opt/node@12/lib"
export CPPFLAGS="-I/usr/local/opt/node@12/include"

# gcloud
if [ -f "${HOME}/.google-cloud-sdk/path.bash.inc" ]; then source "${HOME}/.google-cloud-sdk/path.bash.inc"; fi
if [ -f "${HOME}/.google-cloud-sdk/completion.bash.inc" ]; then source "${HOME}/.google-cloud-sdk/completion.bash.inc"; fi
EOF

read -p "install tools with brew? (y/n) " answer
case ${answer:0:1} in
  y|Y)
    echo "installing tools with brew..."
    brew bundle
esac

read -p "load macos conf? (y/n) " answer
case ${answer:0:1} in
  y|Y )
    echo "loading macos conf..."
    . "${HOME}/.macos"
  ;;
esac


echo "installing tools with pip3..."
pip3 install --upgrade yq >/dev/null
pip3 install "awscli>=1.18.201,<1.18.202" >/dev/null
pip3 install -U crcmod >/dev/null

printf "installing eksctl..."
curl -sL "https://github.com/weaveworks/eksctl/releases/download/${EKSCTL_VERSION}/eksctl_Darwin_amd64.tar.gz" | tar xz -C /tmp \
  && sudo mv /tmp/eksctl /usr/local/bin
echo "ok"

printf "installing kubectl..."
curl -sLo ./kubectl "https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/darwin/amd64/kubectl" \
  && chmod +x ./kubectl \
  && sudo mv ./kubectl /usr/local/bin/kubectl
echo "ok"

printf "installing KIND..."
curl -sLo ./kind "https://github.com/kubernetes-sigs/kind/releases/download/v${KIND_VERSION}/kind-Darwin-amd64" \
  && chmod +x ./kind \
  && sudo mv ./kind /usr/local/bin/kind
echo "ok"

printf "installing kustomize..."
curl -sLo install.sh "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" \
  && chmod +x install.sh \
  && ./install.sh "${KUSTOMIZE_VERSION}" >/dev/null \
  && sudo mv ./kustomize /usr/local/bin/kustomize \
  && rm -f install.sh
echo "ok"

echo "installing fzf..."
if [[ ! -d "${HOME}/.fzf" ]]; then
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install
fi

printf "installing vim-plug..."
curl -fsLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
echo "ok"

echo "Complete!"
